{{ if .Values.services }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: '{{ printf "%s-configs" .Release.Name }}'
data:
  # The configuration are loaded only when the Traefik Pod starts running.
  # Make sure you trigger a rolling update when you change the following value.
  # See here how you can do so: https://stackoverflow.com/questions/52658839/helm-chart-restart-pods-when-configmap-changes
  dynamic.yaml: |-
    # the Traefik dynamic configuration file provider (see https://doc.traefik.io/traefik/providers/file/)
    # https://doc.traefik.io/traefik/reference/dynamic-configuration/file/
    http:
      routers:
        # Define a connection between requests and services
        {{ range .Values.services }}
        to-{{ .name  }}:
          rule: Host(`{{ .subdomain }}.{{ $.Values.domain }}`) && PathPrefix(`{{ .path }}`)
          # If the rule matches, applies the middleware
          service: {{ .name }}
          {{ if .route_middlewares }}
          middlewares:
          {{ range $index, $value := .route_middlewares }}
            - {{ $value }}
          {{ end }}
          {{ end }}
          tls:
            domains:
              - main: {{ .subdomain }}.{{ $.Values.domain }}
        {{ end }}
      middlewares:
        CSW-replacepath:
          replacePathRegex:
            regex: "^/CSW"
            replacement: "/axis2/services/CSW.CSWHttpSoap11Endpoint"
      services:
        # Define how to reach an existing service on our infrastructure
        {{ range .Values.services }}
          {{ .name }}:
            loadBalancer:
              servers:
                - url: http://{{ .host }}:{{ .target_port }}{{ .path }}
        {{ end }}
    # following section added to recognize imported traefik certificates (generated by lets encrypt via https://traefik.me/)
    tls:
      certificates:
        - certFile: {{ .Values.certFile }}
          keyFile: {{ .Values.keyFile }}
      stores:
        default:
          defaultCertificate:
            certFile: {{ .Values.certFile }}
            keyFile: {{ .Values.keyFile }}
{{ end }}